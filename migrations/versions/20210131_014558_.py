"""empty message

Revision ID: 5b341470263b
Revises: 1a8672e5a75f
Create Date: 2021-01-31 01:45:58.216646

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '5b341470263b'
down_revision = '1a8672e5a75f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('song_votes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=True),
    sa.Column('votes', sa.Integer(), nullable=False),
    sa.Column('user_Id', sa.Integer(), nullable=False),
    sa.Column('song_Id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['song_Id'], ['songs.id'], ),
    sa.ForeignKeyConstraint(['user_Id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comment_votes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('updated', sa.DateTime(), nullable=True),
    sa.Column('votes', sa.Integer(), nullable=False),
    sa.Column('user_Id', sa.Integer(), nullable=False),
    sa.Column('comment_Id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['comment_Id'], ['comments.id'], ),
    sa.ForeignKeyConstraint(['user_Id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('votes')
    op.add_column('annotations', sa.Column('annotation', sa.Text(), nullable=False))
    op.add_column('annotations', sa.Column('end', sa.Integer(), nullable=False))
    op.add_column('annotations', sa.Column('lyrics', sa.String(length=1000), nullable=False))
    op.add_column('annotations', sa.Column('start', sa.Integer(), nullable=False))
    op.drop_column('annotations', 'song_facts')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('annotations', sa.Column('song_facts', sa.TEXT(), autoincrement=False, nullable=False))
    op.drop_column('annotations', 'start')
    op.drop_column('annotations', 'lyrics')
    op.drop_column('annotations', 'end')
    op.drop_column('annotations', 'annotation')
    op.create_table('votes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('votes', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_Id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('song_Id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['song_Id'], ['songs.id'], name='votes_song_Id_fkey'),
    sa.ForeignKeyConstraint(['user_Id'], ['users.id'], name='votes_user_Id_fkey'),
    sa.PrimaryKeyConstraint('id', name='votes_pkey')
    )
    op.drop_table('comment_votes')
    op.drop_table('song_votes')
    # ### end Alembic commands ###
